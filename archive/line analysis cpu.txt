Timer unit: 1e-06 s

Total time: 0.002446 s
File: server.py
Function: init_db at line 25

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    25                                           @profile
    26                                           def init_db():
    27         1       1113.0   1113.0     45.5      conn = sqlite3.connect(DB_FILE)
    28         1          1.0      1.0      0.0      c = conn.cursor()
    29         1       1322.0   1322.0     54.0      c.execute('''
    30                                                   CREATE TABLE IF NOT EXISTS flights (
    31                                                       uid TEXT PRIMARY KEY,
    32                                                       start_time TEXT,
    33                                                       end_time TEXT,
    34                                                       final_avg_fuel REAL,
    35                                                       record_count INTEGER
    36                                                   )
    37                                               ''')
    38         1          0.0      0.0      0.0      conn.commit()
    39         1         10.0     10.0      0.4      conn.close()


Total time: 0.016486 s
File: server.py
Function: save_flight_record at line 41

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    41                                           @profile
    42                                           def save_flight_record(uid, start_time, end_time, fina…
    43         6       4721.0    786.8     28.6      conn = sqlite3.connect(DB_FILE)
    44         6         32.0      5.3      0.2      c = conn.cursor()
    45        12       6261.0    521.8     38.0      c.execute('''
    46                                                   INSERT OR REPLACE INTO flights (uid, start_tim…
    47                                                   VALUES (?, ?, ?, ?, ?)
    48         6          5.0      0.8      0.0      ''', (uid, start_time, end_time, final_avg, count))
    49         6       5066.0    844.3     30.7      conn.commit()
    50         6        277.0     46.2      1.7      conn.close()
    51         6        124.0     20.7      0.8      print(f"Saved flight record for UID {uid}")


Total time: 119.519 s
File: server.py
Function: monitor_performance at line 119

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   119                                           @profile
   120                                           def monitor_performance(interval=1):
   121         1         43.0     43.0      0.0      process = psutil.Process(os.getpid())
   122       120        254.0      2.1      0.0      while True:
   123       120      23619.0    196.8      0.0          cpu = process.cpu_percent()
   124       120       4730.0     39.4      0.0          mem = process.memory_info().rss / 1024 ** 2
   125                                                   # Print line for PERF removed as requested
   126       119  119490076.0    1e+06    100.0          time.sleep(interval)


Total time: 120.245 s
File: server.py
Function: start_server at line 128

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   128                                           @profile
   129                                           def start_server():
   130         1       2451.0   2451.0      0.0      init_db()
   131         1         35.0     35.0      0.0      server = socket.socket(socket.AF_INET, socket.SOCK…
   132         1         24.0     24.0      0.0      server.bind((SERVER_IP, SERVER_PORT))
   133         1          4.0      4.0      0.0      server.listen(5)
   134         1         11.0     11.0      0.0      print(f"Server listening on {SERVER_IP}:{SERVER_PO…
   135
   136                                               # Start performance monitor in a background thread
   137         1        159.0    159.0      0.0      threading.Thread(target=monitor_performance, daemo…
   138
   139       151        114.0      0.8      0.0      while True:
   140       151  120192679.0 795978.0    100.0          conn, addr = server.accept()
   141       150      10047.0     67.0      0.0          client_thread = threading.Thread(target=proces…
   142       150        562.0      3.7      0.0          client_thread.daemon = True
   143       150      38481.0    256.5      0.0          client_thread.start()


Total time: 13922.2 s
File: server.py
Function: process_client at line 53

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    53                                           @profile
    54                                           def process_client(conn, addr):
    55       150       9189.0     61.3      0.0      print(f"New connection from {addr}")
    56       150         80.0      0.5      0.0      buffer = ""
    57       150         23.0      0.2      0.0      uid = None
    58       150         25.0      0.2      0.0      start_time = None
    59
    60       150         33.0      0.2      0.0      try:
    61     14194       4427.0      0.3      0.0          while True:
    62     14050        1e+10 990785.6    100.0              data = conn.recv(1024)
    63     14050      18672.0      1.3      0.0              if not data:
    64         6          9.0      1.5      0.0                  break
    65     14044      46729.0      3.3      0.0              buffer += data.decode()
    66     28088      26146.0      0.9      0.0              while "\n" in buffer:
    67     14044      52879.0      3.8      0.0                  line, buffer = buffer.split("\n", 1)
    68     14044      15348.0      1.1      0.0                  if not line.strip():
    69                                                               continue
    70     14044       6042.0      0.4      0.0                  try:
    71     14044     391631.0     27.9      0.0                      message = json.loads(line)
    72                                                           except json.JSONDecodeError:
    73                                                               continue
    74
    75     14044      17448.0      1.2      0.0                  msg_type = message.get("type")
    76     14044       8512.0      0.6      0.0                  if msg_type == "start":
    77       150         92.0      0.6      0.0                      uid = message.get("uid")
    78       150        107.0      0.7      0.0                      start_time = message.get("timestam…
    79       300        378.0      1.3      0.0                      with flights_lock:
    80       150        350.0      2.3      0.0                          flights[uid] = {"start_time": …
    81       150       4904.0     32.7      0.0                      print(f"Started flight {uid} at {s…
    82     13894       7185.0      0.5      0.0                  elif msg_type == "data":
    83     13894       4114.0      0.3      0.0                      if uid is None:
    84                                                                   continue
    85     13894       9494.0      0.7      0.0                      fuel = message.get("fuel")
    86     27788     376943.0     13.6      0.0                      with flights_lock:
    87     13894      17973.0      1.3      0.0                          if uid in flights:
    88     13894      33934.0      2.4      0.0                              flights[uid]["fuel_sum"] +…
    89     13894      14343.0      1.0      0.0                              flights[uid]["count"] += 1
    90     13894      16516.0      1.2      0.0                              running_avg = flights[uid]…
    91     13894     560565.0     40.3      0.0                              print(f"Flight {uid}: Rece…
    92                                                           elif msg_type == "end":
    93                                                               if uid is None:
    94                                                                   continue
    95                                                               end_time = message.get("timestamp")
    96                                                               with flights_lock:
    97                                                                   record = flights.pop(uid, None)
    98                                                               if record and record["count"] > 0:
    99                                                                   final_avg = record["fuel_sum"]…
   100                                                               else:
   101                                                                   final_avg = 0.0
   102                                                               print(f"Flight {uid} ended at {end…
   103                                                               save_flight_record(uid, start_time…
   104                                               except ConnectionResetError:
   105                                                   print(f"ConnectionResetError from {addr}")
   106                                               finally:
   107         6          4.0      0.7      0.0          if uid is not None:
   108        12        425.0     35.4      0.0              with flights_lock:
   109         6         33.0      5.5      0.0                  record = flights.pop(uid, None)
   110         6          6.0      1.0      0.0              if record:
   111         6         30.0      5.0      0.0                  final_avg = record["fuel_sum"] / recor…
   112         6        217.0     36.2      0.0                  end_time = time.strftime("%H:%M:%S")
   113         6        261.0     43.5      0.0                  print(f"Connection for flight {uid} cl…
   114         6      16763.0   2793.8      0.0                  save_flight_record(uid, record["start_…
   115         6        814.0    135.7      0.0          conn.close()
   116         6        111.0     18.5      0.0          print(f"Connection from {addr} closed")


  0.00 seconds - server.py:25 - init_db
  0.02 seconds - server.py:41 - save_flight_record
119.52 seconds - server.py:119 - monitor_performance
120.24 seconds - server.py:128 - start_server
13922.20 seconds - server.py:53 - process_client